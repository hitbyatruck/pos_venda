# Generated by Django 5.1.5 on 2025-03-19 12:45

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clientes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PedidoAssistencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pat_number', models.CharField(editable=False, max_length=10, unique=True, verbose_name='Número da PAT')),
                ('data_entrada', models.DateField(default=django.utils.timezone.now, verbose_name='Data de Entrada')),
                ('estado', models.CharField(choices=[('aberto', 'Aberto'), ('em_curso', 'Em Curso'), ('concluido', 'Concluído'), ('cancelado', 'Cancelado'), ('em_diagnostico', 'Em Diagnóstico')], db_index=True, default='aberto', max_length=20, verbose_name='Estado da PAT')),
                ('relatorio', models.TextField(blank=True, null=True, verbose_name='Relatório')),
                ('garantia', models.BooleanField(default=False, help_text='Marque se o equipamento estiver em garantia.', verbose_name='Em Garantia')),
                ('data_reparacao', models.DateField(blank=True, null=True, verbose_name='Data de Reparação')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pats', to='clientes.cliente', verbose_name='Cliente')),
                ('equipamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pats', to='clientes.equipamentocliente', verbose_name='Equipamento')),
            ],
            options={
                'verbose_name': 'Pedido de Assistência Técnica',
                'verbose_name_plural': 'Pedidos de Assistência Técnica',
                'ordering': ['-data_entrada', 'estado'],
            },
        ),
        migrations.CreateModel(
            name='ItemPat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('servico', 'Serviço'), ('componente', 'Componente')], db_index=True, max_length=20, verbose_name='Tipo')),
                ('referencia', models.CharField(help_text='Código de referência do serviço ou componente', max_length=100, verbose_name='Referência')),
                ('designacao', models.CharField(help_text='Descrição do serviço ou componente', max_length=255, verbose_name='Designação')),
                ('quantidade', models.PositiveIntegerField(default=1, help_text='Quantidade mínima é 1', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantidade')),
                ('preco', models.DecimalField(decimal_places=2, help_text='Preço unitário em euros', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Preço')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('pat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='assistencia.pedidoassistencia', verbose_name='PAT')),
            ],
            options={
                'verbose_name': 'Item de PAT',
                'verbose_name_plural': 'Itens de PAT',
                'ordering': ['tipo', 'designacao'],
            },
        ),
        migrations.AddIndex(
            model_name='pedidoassistencia',
            index=models.Index(fields=['estado', 'data_entrada'], name='assistencia_estado_51823a_idx'),
        ),
        migrations.AddIndex(
            model_name='pedidoassistencia',
            index=models.Index(fields=['cliente', 'estado'], name='assistencia_cliente_ffbac6_idx'),
        ),
        migrations.AddIndex(
            model_name='itempat',
            index=models.Index(fields=['pat', 'tipo'], name='assistencia_pat_id_bb4a4b_idx'),
        ),
        migrations.AddIndex(
            model_name='itempat',
            index=models.Index(fields=['referencia'], name='assistencia_referen_7712bb_idx'),
        ),
        migrations.AddConstraint(
            model_name='itempat',
            constraint=models.CheckConstraint(condition=models.Q(('quantidade__gt', 0)), name='quantidade_positiva'),
        ),
        migrations.AddConstraint(
            model_name='itempat',
            constraint=models.CheckConstraint(condition=models.Q(('preco__gte', 0)), name='preco_nao_negativo'),
        ),
    ]
